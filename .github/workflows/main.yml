name: Rust Auto Release

on:
  push:
    tags:
      - 'v*.*.*' # Dispara apenas para tags no formato vX.X.X

jobs:
  build:
    name: Build and Release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - os: windows-latest
            target: x86_64-pc-windows-msvc

    steps:
      # Checkout do repositório
      - name: Checkout repository
        uses: actions/checkout@v4

      # Instalar dependências necessárias para X11
      - name: Install X11 dependencies
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libx11-dev libxext-dev libxft-dev libxinerama-dev libxcursor-dev libxrender-dev libxfixes-dev

      # Configurar Rust com a versão nightly
      - name: Install Rust nightly
        run:  rustup default nightly

      # Instalar targets adicionais (se necessário)
      - name: Add Rust target
        run: rustup target add ${{ matrix.target }}

      # Compilar o projeto
      - name: Build project
        run: cargo build --release --target=${{ matrix.target }}

      # Adicionar artefatos ao release
      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.target }}-artifact
          path: target/${{ matrix.target }}/release/

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest

    steps:
      # Checkout do repositório
      - name: Checkout repository
        uses: actions/checkout@v4

      # Download dos artefatos
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      # Criar Release no GitHub
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: artifacts/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}